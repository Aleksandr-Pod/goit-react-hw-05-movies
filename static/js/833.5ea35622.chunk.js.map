{"version":3,"file":"static/js/833.5ea35622.chunk.js","mappings":"sQAAA,IAAMA,EAAM,6BACNC,EAAU,mCAGHC,EAAe,WAE1B,OADAC,QAAQC,IAAI,6BACLC,MAAM,GAAD,OAAIL,EAAJ,yCAAwCC,EAAxC,iBAJD,IAKRK,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZC,OAAM,SAAAC,GAAG,OAAIA,EAAIC,YAGTC,EAAc,SAACC,GAE1B,OADAV,QAAQC,IAAI,4BACLC,MAAM,GAAD,OAAIL,EAAJ,mCAAkCC,EAAlC,kBAAmDY,EAAnD,iBAXD,IAYRP,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZC,OAAM,SAAAC,GAAG,OAAIA,EAAIC,YAGTG,EAAiB,SAACC,GAE7B,OADAZ,QAAQC,IAAI,oBACLC,MAAM,GAAD,OAAIL,EAAJ,oBAAmBe,EAAnB,oBAAsCd,IAC/CK,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZC,OAAM,SAAAC,GAAG,OAAIA,EAAIC,YAETK,EAAe,SAACD,GAE3B,OADAZ,QAAQC,IAAI,qBACLC,MAAM,GAAD,OAAIL,EAAJ,oBAAmBe,EAAnB,4BAA8Cd,IACvDK,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZC,OAAM,SAAAC,GAAG,OAAIA,EAAIC,YAETM,EAAY,SAACF,GAExB,OADAZ,QAAQC,IAAI,mBACLC,MAAM,GAAD,OAAIL,EAAJ,oBAAmBe,EAAnB,4BAA8Cd,IACvDK,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZC,OAAM,SAAAC,GAAG,OAAIA,EAAIC,a,0FC/BTO,EAAYC,EAAAA,GAAAA,GAAH,2GAMTC,EAAcD,EAAAA,GAAAA,GAAH,4CAGXE,EAAaF,EAAAA,GAAAA,GAAH,4FAMVG,GAAOH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,sK,kBCdF,SAASK,EAAT,GAA8C,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KAC1CC,GAAWC,EAAAA,EAAAA,MACjB,OACI,UAACX,EAAD,YACI,SAACE,EAAD,UAAcM,IACbD,EAAOK,KAAI,SAAAC,GAAE,OACV,SAACV,EAAD,WACI,SAACC,EAAD,CAAMU,GAAE,UAAKL,GAAL,OAAYI,EAAGE,IAAMC,MAAO,CAAEC,KAAMP,GAA5C,SAAyDG,EAAGL,SAD/CK,EAAGE,Y,kHCNrB,SAASG,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACgB,IAAlBd,EAAOe,QACXC,EAAAA,KAAwBnC,MAAK,SAAAoC,GAAI,OAAIJ,EAAUI,EAAKC,cACrD,CAAClB,KAGA,SAAC,IAAD,CACIC,MAAM,kBACND,OAAQA,EACRE,KAAM","sources":["components/APIfetch/APIfetch.js","components/Movies/Movies-styled.js","components/Movies/MoviesList.js","components/TodayMovies/TodayMovies.js"],"sourcesContent":["const URL = 'https://api.themoviedb.org';\nconst API_KEY = 'e2b1fd67e69bae9f083d3c611e2b6f41';\nconst page = 1;\n\nexport const fetchForADay = () => {\n  console.log(\"fetching today's movies..\");\n  return fetch(`${URL}/3/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n    .then(r => r.json())\n    .catch(err => err.message)\n}\n\nexport const fetchSearch = (query) => {\n  console.log(\"fetching by searchName..\");\n  return fetch(`${URL}/3/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`)\n    .then(r => r.json())\n    .catch(err => err.message)\n}\n\nexport const fetchMovieById = (movieId) => {\n  console.log(\"fetching by Id..\");\n  return fetch(`${URL}/3/movie/${movieId}?api_key=${API_KEY}`)\n    .then(r => r.json())\n    .catch(err => err.message);\n}\nexport const fetchReviews = (movieId) => {\n  console.log(\"fetching Review..\");\n  return fetch(`${URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(r => r.json())\n    .catch(err => err.message);\n}\nexport const fetchCast = (movieId) => {\n  console.log(\"fetching Cast..\");\n  return fetch(`${URL}/3/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(r => r.json())\n    .catch(err => err.message);\n}\n\n\n\n    ","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom'\n\nexport const MoviesBox = styled.ul`\nmargin: 0 auto;\npadding: 10px;\nmax-width: 800px;\nbackground-color: lightgreen;\n` \nexport const MoviesTitle = styled.h3`\ntext-align: center\n`\nexport const MoviesItem = styled.li`\ndisplay: flex;\nlist-style: none;\nmargin: 5px 0;\n// width: 100%;\n`\nexport const Link = styled(NavLink)`\ntext-decoration: none;\npadding: 5px;\nwidth: 100%;\nheight: 100%;\nborder: 1px solid green;\nborder-radius: 5px;\nbackground-color: yellow;\n`","import { Link, MoviesBox, MoviesTitle, MoviesItem } from './Movies-styled';\nimport { useLocation } from 'react-router-dom';\nimport { PropTypes } from 'prop-types';\n\nexport default function MoviesList({ movies, title, path }) {\n    const location = useLocation();\n    return (\n        <MoviesBox>\n            <MoviesTitle>{title}</MoviesTitle>\n            {movies.map(el => (\n                <MoviesItem key={el.id}>\n                    <Link to={`${path}${el.id}`} state={{ from: location }}>{el.title}</Link>\n                </MoviesItem>\n            ))}\n        </MoviesBox>\n    )\n}\nMoviesList.propTypes = {\n    movies: PropTypes.array,\n    tytle: PropTypes.string,\n    path: PropTypes.string\n}","import { useState, useEffect } from 'react';\nimport * as movieApi from '../APIfetch/APIfetch';\nimport MoviesList from \"../Movies/MoviesList\";\n\nexport default function TodayMovies() {\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        if (movies.length !== 0) return;\n        movieApi.fetchForADay().then(data => setMovies(data.results));\n    }, [movies]);\n\n    return (\n        <MoviesList\n            title=\"Tranding movies\"\n            movies={movies}\n            path={'movies/'} />\n  )\n}"],"names":["URL","API_KEY","fetchForADay","console","log","fetch","then","r","json","catch","err","message","fetchSearch","query","fetchMovieById","movieId","fetchReviews","fetchCast","MoviesBox","styled","MoviesTitle","MoviesItem","Link","NavLink","MoviesList","movies","title","path","location","useLocation","map","el","to","id","state","from","TodayMovies","useState","setMovies","useEffect","length","movieApi","data","results"],"sourceRoot":""}