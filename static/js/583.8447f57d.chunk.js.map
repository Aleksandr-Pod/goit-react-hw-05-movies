{"version":3,"file":"static/js/583.8447f57d.chunk.js","mappings":"sQAAA,IAAMA,EAAM,6BACNC,EAAU,mCAGHC,EAAe,WAE1B,OADAC,QAAQC,IAAI,6BACLC,MAAM,GAAD,OAAIL,EAAJ,yCAAwCC,EAAxC,iBAJD,IAKRK,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZC,OAAM,SAAAC,GAAG,OAAIA,EAAIC,YAGTC,EAAc,SAACC,GAE1B,OADAV,QAAQC,IAAI,4BACLC,MAAM,GAAD,OAAIL,EAAJ,mCAAkCC,EAAlC,kBAAmDY,EAAnD,iBAXD,IAYRP,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZC,OAAM,SAAAC,GAAG,OAAIA,EAAIC,YAGTG,EAAiB,SAACC,GAE7B,OADAZ,QAAQC,IAAI,oBACLC,MAAM,GAAD,OAAIL,EAAJ,oBAAmBe,EAAnB,oBAAsCd,IAC/CK,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZC,OAAM,SAAAC,GAAG,OAAIA,EAAIC,YAETK,EAAe,SAACD,GAE3B,OADAZ,QAAQC,IAAI,qBACLC,MAAM,GAAD,OAAIL,EAAJ,oBAAmBe,EAAnB,4BAA8Cd,IACvDK,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZC,OAAM,SAAAC,GAAG,OAAIA,EAAIC,YAETM,EAAY,SAACF,GAExB,OADAZ,QAAQC,IAAI,mBACLC,MAAM,GAAD,OAAIL,EAAJ,oBAAmBe,EAAnB,4BAA8Cd,IACvDK,MAAK,SAAAC,GAAC,OAAIA,EAAEC,UACZC,OAAM,SAAAC,GAAG,OAAIA,EAAIC,a,kIChCTO,EAAWC,EAAAA,GAAAA,GAAH,2GAORC,EAAYD,EAAAA,GAAAA,GAAH,gKASTE,EAAiBF,EAAAA,GAAAA,IAAH,gFAKdG,EAASH,EAAAA,GAAAA,EAAH,yE,SClBJ,SAASI,IACtB,IAAQR,GAAYS,EAAAA,EAAAA,MAAZT,QACR,GAAwBU,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAOE,OALFC,EAAAA,EAAAA,YAAU,WACJF,GACNG,EAAAA,EAAmBd,GAAST,MAAK,SAAAwB,GAAI,OAAIH,EAAQG,EAAKJ,WACnD,CAACX,EAASW,KAGP,SAACR,EAAD,UACKQ,GAAQA,EAAKK,KAAI,SAAAC,GAAE,OAChB,UAACZ,EAAD,YACI,SAACC,EAAD,UACKW,EAAGC,cACA,gBAAKC,IAAG,0CAAqCF,EAAGC,cAAgBE,QAAQ,OAAOC,IAAKJ,EAAGK,QACvF,SAACf,EAAD,0BAER,uBAAIU,EAAGK,QACP,uBAAIL,EAAGM,cAPKN,EAAGO","sources":["components/APIfetch/APIfetch.js","components/Cast/Cast-styled.js","components/Cast/Cast.js"],"sourcesContent":["const URL = 'https://api.themoviedb.org';\nconst API_KEY = 'e2b1fd67e69bae9f083d3c611e2b6f41';\nconst page = 1;\n\nexport const fetchForADay = () => {\n  console.log(\"fetching today's movies..\");\n  return fetch(`${URL}/3/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n    .then(r => r.json())\n    .catch(err => err.message)\n}\n\nexport const fetchSearch = (query) => {\n  console.log(\"fetching by searchName..\");\n  return fetch(`${URL}/3/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`)\n    .then(r => r.json())\n    .catch(err => err.message)\n}\n\nexport const fetchMovieById = (movieId) => {\n  console.log(\"fetching by Id..\");\n  return fetch(`${URL}/3/movie/${movieId}?api_key=${API_KEY}`)\n    .then(r => r.json())\n    .catch(err => err.message);\n}\nexport const fetchReviews = (movieId) => {\n  console.log(\"fetching Review..\");\n  return fetch(`${URL}/3/movie/${movieId}/reviews?api_key=${API_KEY}`)\n    .then(r => r.json())\n    .catch(err => err.message);\n}\nexport const fetchCast = (movieId) => {\n  console.log(\"fetching Cast..\");\n  return fetch(`${URL}/3/movie/${movieId}/credits?api_key=${API_KEY}`)\n    .then(r => r.json())\n    .catch(err => err.message);\n}\n\n\n\n    ","import styled from 'styled-components';\n\nexport const CastList = styled.ul`\ndisplay:flex;\njustify-content: center;\nflex-direction: raw;\nflex-wrap: wrap;\n\n`\nexport const ActorCard = styled.li`\nwidth: 200px;\nmargin: 5px;\npadding: 10px;\nbackground-color: yellow;\nborder 1px solid gray;\nborder-radius: 5px;\nlist-style: none;\n`\nexport const ActorFotoFrame = styled.div`\nwidth: 200px;\nheight: 300px;\nbackground-color: gray;\n`\nexport const NoFoto = styled.p`\nmargin: 0;\npadding: 20px;\ntext-align: center;\n`","import { useState, useEffect } from 'react';\nimport * as movieApi from '../APIfetch/APIfetch';\nimport { useParams } from 'react-router-dom';\nimport { CastList, ActorCard, NoFoto, ActorFotoFrame } from './Cast-styled';\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    if (cast) return;\n  movieApi.fetchCast(movieId).then(data => setCast(data.cast));\n  }, [movieId, cast]);\n\n    return (\n        <CastList>\n            {cast && cast.map(el => (\n                <ActorCard key={el.id}>\n                    <ActorFotoFrame>\n                        {el.profile_path ?\n                            <img src={`https://image.tmdb.org/t/p/w200/${el.profile_path}`} loading=\"lazy\" alt={el.name} /> :\n                            <NoFoto>no image</NoFoto>}\n                    </ActorFotoFrame>\n                    <p>{el.name}</p>\n                    <p>{el.character}</p>\n                </ActorCard>\n            ))}\n        </CastList>\n    )\n}"],"names":["URL","API_KEY","fetchForADay","console","log","fetch","then","r","json","catch","err","message","fetchSearch","query","fetchMovieById","movieId","fetchReviews","fetchCast","CastList","styled","ActorCard","ActorFotoFrame","NoFoto","Cast","useParams","useState","cast","setCast","useEffect","movieApi","data","map","el","profile_path","src","loading","alt","name","character","id"],"sourceRoot":""}